extends ../internal.layout.pug

block variables
  - var title = 'Блог';

block scripts
  script(src='blog.bundle.js')

block content
    header.header
        .user.blog__user
            .user__pic
                img(src="/assets/images/avatar.jpg").user__avatar
            .user__description
                .user__title Блог
                .user__info Статьи, которые я написал

    section.blog
        .blog__triangles
            +section-triangles('#fff', '#fff')
        .blog-content
            .blog__left
                aside.sidebar
                    nav.menu-left
                        ul.menu-left__list
                            each item in ['Язык программирования Solidity', "Что такое блокчейн, и как это работает", "Что такое Vue.js", "Почему стоит выбрать Vue.js", "Yarn или npm: функциональные отличия"]
                                li.menu-left__item
                                    a(href="").menu-left__link #{item}

            .blog_right
                .post-list
                    .post
                        h1.post__title Язык программирования Solidity
                        .post__date 10 июня 2018
                        .post__text
                            p Solidity - это высокоуровневый язык для виртуальной машины Ethereum с синтаксисом, похожим на JavaScript. Это учебное руководство обеспечивает основное введение в Solidity и предполагает некоторое знание Виртуальной машины Ethereum и программирования в целом. Оно не касается таких функций как естественная спецификация языка или формальная верификация и не является заключительной спецификацией языка.
                            p Можно начать использовать Solidity в браузере без потребности загружать или компилировать что-либо. Это приложение только поддерживает компиляцию - если Вы хотите выполнить код или ввести его в блокчейн, необходимо использовать клиент, такой как например Geth или AlethZero.
                    .post
                        h1.post__title Что такое блокчейн, и как это работает
                        .post__date 12 июня 2018
                        .post__text
                            p Blockchain — это технология, на базе которой построен Bitcoin. Но есть, пожалуй, десятки других способов использования блокчейна в отрыве от криптовалют. Есть смельчаки, которые называют блокчейн главным технологическим прорывом со времен изобретения интернета.
                            p Если не вдаваться в технические нюансы, то сам принцип работы блокчейна довольно прост. Его можно представить как учетную книгу, которая есть у каждого участника события и которая постоянно обновляется. По сути, в эту книгу можно вписать любое событие — от финансовых операций с криптовалютами Bitcoin, Etherum и т. д. до результатов голосования на выборах президента или идентификационных данных.
                            p Фишка блокчейна в том, что страницы (читай блоки) этой книги одновременно хранятся у всех пользователей сети, постоянно обновляются и ссылаются на старые страницы (подробнее об этом в статье про майнинг биткоинов). И если кто-то попытается обмануть систему, вырвав или вклеив в книгу какую-то страницу, то система сразу же обратиться к десяткам тысяч других версий этой книги и обнаружит несоответствие в структуре блоков.
                    .post
                        h1.post__title Что такое Vue.js
                        .post__date 19 июня 2018
                        .post__text
                            p Vue.js - это прогрессивный фреймворк, подходящий для создания пользовательских интерфейсов.
                            p Название фреймворка созвучно с view, то есть с представлением (если говорить о модели MVC).
                            p Vue.js - это фреймворк, который используется для решения задач именно уровня представления, его просто интегрировать с другими библиотеками и проектами. Иными словами, Vue.js - это инструмент, который можно внедрять постепенно. Возможность внедрения связана с тем, что Vue.js стремится к прогрессивности: поддержку Vue можно добавить в уже существующий проект, благодаря чему его функциональность будет значительно расширена. И это отличает его от других фреймворков.
                            p Вообще простота интеграции - это одно из основных преимуществ данного фреймворка, особенно в сочетании с возможностью интеграции с бэкенд фреймворками.
                            p Также Vue.js можно использовать для создания одностраничных приложений.
                            p Центральная концепция Vue.js – это концепция компонентов, то есть небольших частей интерфейса пользователя, которые можно использовать повторно. Таким образом, и само приложение состоит из частей-компонентов.
                            p Vue.js – это реактивный MVC фреймворк: представление (view) автоматически изменяется при изменении переменной (модели).
                    .post
                        h1.post__title Почему стоит выбрать Vue.js
                        .post__date 18 июня 2018
                        .post__text
                            p Vue реактивен, производителен и прост в освоении. Фреймворк не зависит от jQuery. Компоненты Vue легко использовать в уже существующем проекте.
                            p Vue имеет хорошую документацию, касающуюся в том числе API.
                            p И, конечно, не стоит забывать про лицензию MIT, которую имеет Vue.js – значит, фреймворк можно использовать где и когда угодно.
                            p Более того, в том, как работать с ним, может быстро разобраться даже тот, кто никогда до этого не имел дела с JS-фреймворками.

                    .post
                        h1.post__title Yarn или npm: функциональные отличия
                        .post__date 21 июня 2018
                        .post__text
                            p На первый взгляд Yarn и npm кажутся похожими. Но если заглянуть под капот, мы увидим отличия Yarn.
                            p Независимо от того, устанавливается ли пакет с помощью npm или Yarn, при этом решается серия задач. В npm эти задачи выполняются последовательно и отдельно для каждого пакета, это значит, что пока пакет не установлен полностью, следующий пакет будет ждать. В Yarn эти операции выполняются параллельно, что улучшает производительность.
                            p По умолчанию npm выводит очень много консольных логов. Например, он рекурсивно перечисляет все установленные пакеты при выполнении npm install <package>. Yarn с другой стороны, обходится минимумом информации и использует эмодзи (если у вас mac).
                            p Кроме функциональных отличий, в Yarn также отличаются команды. Некоторые команды npm удалены, некоторые модифицированы, а пара интересных команд добавлена.
                            p yarn global в отличие от npm, где глобальные операции выполняются за счет опции -g или --global, команды Yarn нуждаются в префиксе global. Также как и в npm, специфические для проекта зависимости глобально не устанавливаются.
                            p Команда npm install устанавливает все зависимости из файла package.json и позволяет вам добавлять новые пакеты. Команда yarn install только устанавливает зависимости, перечисленные в файле yarn.lock или package.json, именно в таком порядке.
                            p По умолчанию Yarn набирает больше очков, чем npm. У нас есть файл блокировки, установка пакетов быстра, как никогда и они все автоматически сохраняются в package.json. Последствия установки и использования Yarn минимальны — вы можете попробовать его только в одном проекте, чтобы увидеть, подходит он вам или нет. Это делает Yarn превосходной заменой npm.
            .blog_empty